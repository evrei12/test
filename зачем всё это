from pygame import *
from random import *
from time import time as timer
win_width = 1000
win_height = 1000
window = display.set_mode(    (win_width, win_height))

display.set_caption("Galaxy")
background = transform.scale(image.load("galaxy.jpg"),(win_width, win_height))

mixer.init()
mixer.music.load('space.ogg')
mixer.music.play()
clock = time.Clock()
FPS = 60

point = 0
lost = 0

class GameSprite(sprite.Sprite):
    def __init__(self, player_image, player_x, player_y, player_speed):
        super().__init__()
        self.image = transform.scale(image.load(player_image), (100, 100))
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Enemy(GameSprite):
    def update(self):
        self.rect.y += self.speed
        global lost
        if self.rect.y > win_height:
            self.rect.x = randint(80, win_width - 80)
            self.rect.y = 0
            lost = lost + 1

class Bullet(GameSprite):
    def update(self):
        self.rect.y -= self.speed
        if self.rect.y < 0:
            self.kill()



class Player(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_LEFT] and self.rect.x > 5:
            self.rect.x -= self.speed
        if keys[K_RIGHT] and self.rect.x < win_width - 80:
            self.rect.x += self.speed
    def fire(self):
        bullet = Bullet("bullet.png", self.rect.centerx, self.rect.top, 15)
        bullets.add(bullet) 

monsters = sprite.Group()
for i in range(5):
    monster = Enemy("ufo.png", randint(0, 650), -40, 3)
    monsters.add(monster)

bullets = sprite.Group()

player = Player(player_image = "rocket.png", player_x = 150, player_y = 650, player_speed = 15)
#cyborg = Enemy(player_image = "cyborg.png", player_x = 400, player_y = 50, player_speed = 0)
#player.reset()
#kick = mixer.Sound('kick.ogg')
game = True
finish = False
#wall1 = Wall(1, 2, 3, 200, 0, 1, 800)

font.init()
font1 = font.SysFont('Arial', 36)
text_win = font1.render(
    "Победа", 1, (255, 255, 255)
)



run = True
rel_time = False
num_fire = 0

               


while run:
    for e in event.get():
        if e.type == QUIT:
            run = False
        elif e.type == KEYDOWN:
            if e.key == K_SPACE:
                if num_fire < 5 and rel_time == False:
                    num_fire = num_fire + 1
                    player.fire()

                if num_fire >= 5 and rel_time == False:
                    last_time = timer()
                    rel_time = True
    sprites_list = sprite.groupcollide(monsters, bullets, True, True)
    for i in sprites_list:
        point += 1
        monster = Enemy("ufo.png", randint(0, 650), -40, 3)
        monsters.add(monster)
    text_lose = font1.render(
    "Пропущено:" +str(point), 1, (255, 255, 255)
    )
    #window.blit(text_win, (100, 50))
    

    



    if finish != True:
        if rel_time == True:
            now_time = timer()
            if now_time - last_time < 3:
                reload = font1.render('wait, reload...', 1, (150, 0, 0))
                window.blit(reload, (260, 460))
            else:
                num_fire = 0
                rel_time = False
        collides = sprite.groupcollide(monsters, bullets, True, True)
        for c in collides:
            score = score + 1
            monster = Enemy(img_enemy, randint(80, win_width - 80), -40, 80, 50, randint(1, 5))
            monster.add(monster)

            if sprite.spritecollide(player, monsters, False) or sprite.spritecollide(player, asteroids, False):
                sprite.spritecollide(player, monsters, True)
                sprite.spritecollide(player, asteroids, True)
                life = life -1
            

        window.blit(background,(0, 0))
        player.reset()
        monsters.draw(window)
        monsters.update() 
        bullets.draw(window)
        bullets.update()  
        player.update()
 
        
        window.blit(text_lose, (20, 20))
    display.update()
    clock.tick(FPS)
